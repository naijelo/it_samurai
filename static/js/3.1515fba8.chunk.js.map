{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","isOwner","savePhoto","Preloader","src","photos","large","userPhoto","type","target","files","length","Post","className","css","post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","postsElement","posts","map","id","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorisedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.1515fba8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Profile_link__35z-U\",\"a\":\"Profile_a__2gCpu\",\"profile\":\"Profile_profile__3JkqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__6jlOY\"};","import React, {useState, useEffect} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\nlet [editMode, setEditMode] = useState(false);\r\nlet [status, setStatus] = useState(props.status);\r\n\r\nuseEffect( () => {\r\n    setStatus(props.status)\r\n}, [props.status]);\r\n\r\nconst activateEditMode = () => {\r\n    setEditMode(true);\r\n}\r\n\r\nconst deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n}\r\n\r\nconst onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n}\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>\r\n                            {props.status || \"No Status Here\"}\r\n                        </span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} \r\n                        value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport css from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/userpic.png\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport css from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={css.post}>\r\n            <div className=\"message\">Message: {props.message}</div>\r\n            <div className=\"likes\">Likes: {props.likesCount}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport css from \"./MyPosts.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder={\"Post Message\"}\r\n                validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n\r\nlet postsElement = props.posts.map(post =>\r\n     <Post message={post.message} likesCount={post.likesCount} key={post.id}/> );\r\n\r\nlet newPostElement = React.createRef();\r\n\r\nlet onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        <div className={css.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet addStoreToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet addDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(addStoreToProps, addDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport css from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={css.profile}>\r\n            <ProfileInfo profile={props.profile} \r\n                         savePhoto={props.savePhoto} \r\n                         isOwner={props.isOwner} \r\n                         status={props.status} \r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Profile {...this.props} \r\n                    isOwner={!this.props.match.params.userId} \r\n                    profile={this.props.profile} \r\n                    status={this.props.status} \r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n)(ProfileContainer)"],"sourceRoot":""}