{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","css","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","cols","rows","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","mes","newMessageBody","isAuth","dialogsItems","values","addMessage","mapStateToPropsForRedirect","state","auth","compose","connect","dialogsPage","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,8B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,wHCWbC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAIC,OAAS,IAAMD,IAAIE,OAAvC,SACH,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,U,kBCCnBC,EANC,SAACT,GACb,OACI,qBAAKG,UAAWC,IAAIC,OAApB,SAA6BL,EAAMU,W,0CCkCrCC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBACjCa,SAAU,CAACC,IAAUX,GAAcY,YAAY,YAC3CC,KAAK,KAAKC,KAAK,QAEvB,8BACI,yDAQDC,EAjDC,SAAC1B,GAEb,IAAI2B,EAAkB3B,EAAM4B,QAAQC,KAAI,SAAAC,GAAC,OACrC,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBN,GAAI4B,EAAE5B,IAAZ4B,EAAE5B,OACjC6B,EAAmB/B,EAAMgC,SAASH,KAAI,SAAAI,GAAG,OACzC,cAAC,EAAD,CAASvB,QAASuB,EAAIvB,SAAcuB,EAAI/B,OAEvBF,EAAMkC,eAM3B,OAAKlC,EAAMmC,OAGP,sBAAKhC,UAAWC,IAAIwB,QAApB,UACI,qBAAKzB,UAAWC,IAAIgC,aAApB,SACKT,IAEL,qBAAKxB,UAAWC,IAAI4B,SAApB,SACI,8BAAMD,MAIV,cAAClB,EAAD,CAAqBG,SAhBT,SAACqB,GACjBrC,EAAMsC,WAAWD,EAAOH,sBAGD,cAAC,IAAD,CAAU3B,GAAI,Y,+CClBzCgC,EAA6B,SAACC,GAAD,MAAY,CACzCL,OAAQK,EAAMC,KAAKN,S,OCqBRO,sBACXC,aAnBkB,SAACH,GACnB,MAAO,CACHZ,QAASY,EAAMI,YAAYhB,QAC3BI,SAAUQ,EAAMI,YAAYZ,SAC5BE,eAAgBM,EAAMI,YAAYV,mBAIjB,SAACW,GACtB,MAAO,CACHP,WAAY,SAACJ,GACTW,EAASC,YAAmBZ,UDXR,SAACa,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKjD,MAAMmC,OAET,cAACY,EAAD,eAAeE,KAAKjD,QAFI,cAAC,IAAD,CAAUO,GAAI,eAJV,GAEX2C,IAAMH,WAStC,OAFqCJ,YAAQJ,EAARI,CAAoCK,KCS9DN,CAGbhB","file":"static/js/4.a842604e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__14UNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__1diO4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__3CM0F\"};","import React from \"react\";\r\nimport css from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={css.dialog + ' ' + css.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport css from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={css.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport css from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let dialogsElements = props.dialogs.map(d =>\r\n        <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = props.messages.map(mes =>\r\n        <Message message={mes.message} key={mes.id} />);\r\n\r\n    let newMessageBody = props.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return (<Redirect to={\"/Login\"}/>);\r\n\r\n    return (\r\n        <div className={css.dialogs}>\r\n            <div className={css.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={css.messages}>\r\n                <div>{messagesElements}</div>\r\n                \r\n            </div>\r\n            \r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\"\r\n                validate={[required, maxLength50]} placeholder=\"Type Here\" \r\n                    cols=\"20\" rows=\"5\"/>\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() { \r\n            if (!this.props.isAuth) return <Redirect to={\"/Login\"} />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageBody: state.dialogsPage.newMessageBody,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}